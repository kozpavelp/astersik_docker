[general]
static=yes
writeprotect=no
;autofallthrough=no
;extenpatternmatchnew=no
clearglobalvars=no
;userscontext=default
[globals]
CONSOLE=Console/dsp				; Console interface for demo
;CONSOLE=DAHDI/1
;CONSOLE=Phone/phone0
TRUNK=DAHDI/G2					; Trunk interface
TRUNKMSD=1					; MSD digits to strip (usually 1 or 0)
;TRUNK=IAX2/user:pass@provider
;FREENUMDOMAIN=mydomain.com                     ; domain to send on outbound
; Any category other than "General" and "Globals" represent
; extension contexts, which are collections of extensions.
;autohints = yes
;exten => someexten,{priority|label{+|-}offset}[(alias)],application(arg1,arg2,...)
;include => daytime,9:00-17:00,mon-fri,*,*
;include => weekend,*,sat-sun,*,*
;include => weeknights,17:02-8:58,mon-fri,*,*
;ignorepat => 9

[default]
switch => Realtime/internal@extensions

; Real extensions would go here. Generally you want real extensions to be
; 4 or 5 digits long (although there is no such requirement) and start with a
; single digit that is fairly large (like 6 or 7) so that you have plenty of
; room to overlap extensions and menu options without conflict.  You can alias
; them with names, too, and use global variables

[time]
exten => _X.,30000(time),NoOp(Time: ${EXTEN} ${timezone})
	same => n,Wait(0.25)
	same => n,Answer()
; the amount of delay is set for English; you may need to adjust this time
; for other languages if there's no pause before the synchronizing beep.
	same => n,Set(FUTURETIME=$[${EPOCH} + 12])
	same => n,SayUnixTime(${FUTURETIME},Zulu,HNS)
	same => n,SayPhonetic(z)
; use the timezone associated with the extension (sip only), or system-wide
; default if one hasn't been set.
	same => n,SayUnixTime(${FUTURETIME},${timezone},HNS)
	same => n,Playback(spy-local)
	same => n,WaitUntil(${FUTURETIME})
	same => n,Playback(beep)
	same => n,Return()

;
; ANI context: use in the same way as "time" above

[internal]
switch => Realtime/internal@extensions
